/*
  allsets.dlg

*! VERSION 1.3.0  03sep2020

*/

VERSION 12.0

INCLUDE _std_large
DEFINE _dlght 365
DEFINE _dlgwd 520
INCLUDE header
HELP hlp1, view("help allsets")
RESET res1


DIALOG main, tabtitle("Model") title("allsets - Best subset for regression")
BEGIN
	TEXT 		tx_type	_lft	_top	100		.,	label("Regression type:")
	COMBOBOX	co_type	110		_top	100		., dropdownlist contents(type_contents) values(type_values) onselchange(program change_type)
	TEXT 		tx_dv 	_lft	_ls		_vnwd	.,	label("Dependent variable:")
	TEXT 		tx_iv	_vlx	@		160		.,	label("Independent variables:")
	VARLIST 	vl_iv	@		_ss		_vlwd	.,	fv label("Independent variables")
	VARNAME 	vn_dv	_lft 	@		_vnwd	.,	label("Dependent variable")
	DEFINE _x _xsetbu
	DEFINE _y 35
	INCLUDE _bu_stset

	GROUPBOX	gb_opt	_lft  	_xxls	500    210, label("Options")
	CHECKBOX	cb_hr	_ilft	_ss		250	  	., label("Only hierarchical models") default(1)
	TEXT		tx_fix	_ilft	_ms		100		., label("Fixed variables:")
	VARLIST 	vl_fix	+100	@		380		., label("Fixed variables") option(fixed)
	EDIT		ed_max  _ilft	_ls		30		., label("Maximum number of variables used in the combinations") /*
					*/								numonly default("") option(maxvar)
	TEXT		tx_max +35	    @		450		., label("Maximum number of variables used in the combinations (leave empty to use ALL)")
	EDIT		ed_min  _ilft	_ms		30		., label("Minimum number of variables used in the combinations") /*
					*/								numonly default("1") option(minvar)
	TEXT		tx_ncom +35	    @		450		., label("Minimum number of variables used in the combinations")
	TEXT 		tx_usin	_ilft	_ls		460		., label("Stata Data file to store results (working directory is used by default):")
	FILE		fl_usin	_ilft	_ss		480		., label("Browse...") default("allsets_results.dta")/*
					*/								dialogtitle("Save Allsets Results Stata Data File") /*
					*/								filter("Stata Data (*.dta)|*.dta") save option(using)
	CHECKBOX	cb_repl	_ilft	_ms		250	  	., label("Replace dataset if it already exists") default(1)

	GROUPBOX	gb_nst	_lft  	+40		500    60, label("Name of the study")
	EDIT		ed_nst	_ilft   _ms	 	480		., option(nst)
END

INCLUDE ifin

DIALOG weights, tabtitle(resource "Weights")
BEGIN
  TEXT     tx_wgttyp _lft      _top      _cwd1     ., label("Weight type:")
  BUTTON   bu_help   _xsetbu   -2        _setbuwd  ., label("Help weights")	onpush(view help weights##|_new)

  RADIO    rb_none   _lft      +22       _iwd      ., first label("None") onclickon(program wgt_off) option(NONE)
  RADIO    rb_pw     _lft      _ss       _iwd      ., last label("Sampling weights") onclickon(program wgt_on) option(pweight)

  TEXT     tx_wgt    _lft      _ls       _iwd      ., label("Weight:")
  VARLIST  vl_wgt    @         _ss       _iwd      ., numeric label("Weight")
END

LIST type_contents
	BEGIN
		Linear
		Logistic
		Cox
	END

LIST type_values
	BEGIN
		linear
		logistic
		cox
	END

PROGRAM wgt_on
BEGIN
	call weights.tx_wgt.enable
	call weights.vl_wgt.enable
	call weights.tx_wgt.setlabel "Sampling weight:"
END

PROGRAM wgt_off
BEGIN
	call weights.tx_wgt.disable
	call weights.vl_wgt.disable
	call weights.tx_wgt.setlabel "Weight:"
END


PROGRAM change_type
BEGIN
	//Show/hide and move controls
	if main.co_type.iseq("cox") {
		call main.tx_dv.hide
		call main.vn_dv.hide
		call main.tx_iv.setposition 10 . . .
		call main.vl_iv.setposition 10 . 480 .
		call main.bu_stset.show
	}
	else {
		call main.tx_dv.show
		call main.vn_dv.show
		call main.tx_iv.setposition 150 . . .
		call main.vl_iv.setposition 150 . 340 .
		call main.bu_stset.hide
	}
END

PROGRAM command
BEGIN
	put "allsets "
	if main.co_type.iseq("cox") {
		varlist main.vl_iv
	}
	else {
		varlist main.vn_dv main.vl_iv
	}
	put " " /program ifin_output

	//Weights
	if !weights.rb_none {
		require weights.vl_wgt
		put " [pweight= "
		put weights.vl_wgt
		put "] "
	}

	beginoptions
		put " " main.co_type
		if !main.cb_hr {
			put " nohierarchical"
		}
		optionarg main.vl_fix
		optionarg main.ed_max
		if !main.ed_min.isdefault() {
			optionarg main.ed_min
		}
		if !main.fl_usin.isdefault() {
			optionarg main.fl_usin
		}
		if !main.cb_repl {
			put " noreplace"
		}
		optionarg main.ed_nst
	endoptions
END
